syntax = "proto3";

package listing_stream;

// Request message for streaming listings
message StreamRequest {
    string update_type = 1;  // Type of updates to stream (e.g., "all", "listings", "users")
}

// Message for user asset updates
message UserAssets {
    string address = 1;
    double sol_balance = 2;
    string token_holdings = 3;  // JSON string of token holdings
    string nft_holdings = 4;    // JSON string of NFT holdings
    string updated_at = 5;
}

// Message for listing details
message Listing {
    string account = 1;
    string name = 2;
    uint64 seed = 3;
    string mint = 4;
    uint64 funding_goal = 5;
    string pool_mint_supply = 6;
    uint64 funding_raised = 7;
    string available_tokens = 8;
    double base_price = 9;
    string tokens_sold = 10;
    uint32 bump = 11;
    uint32 vault_bump = 12;
    uint32 mint_bump = 13;
    string updated_at = 14;
}

// Response message that can contain either a user assets update or a listing update
message StreamResponse {
    oneof update {
        UserAssets user_assets = 1;
        Listing listing = 2;
    }
}

// The listing stream service definition
service ListingStream {
    // Stream listings and user assets updates
    rpc StreamListings(StreamRequest) returns (stream StreamResponse);
}